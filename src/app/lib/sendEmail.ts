import nodemailer from "nodemailer";

const transporter = nodemailer.createTransport({
  service: "gmail",
  auth: {
    user: process.env.GMAIL_EMAIL,
    pass: process.env.GMAIL_PASSWORD,
  },
});

// send mail with defined transport object

export const sendMail = async (receiverEmail: string, link: string) => {
  try {
    return await transporter.sendMail({
      from: `"JW Centrs help üöÄ" <${process.env.GMAIL_EMAIL}>`, // sender address
      to: receiverEmail, // list of receivers
      subject: "–ó–∞–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è", // Subject line
      html: `–ù–∞–º–∏—Ç–µ –Ω–∞ —ç—Ç—É <a href="${link}">—Å—Å—ã–ª–∫—É</a> –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è. <br/> –°—ã–ª–∫–∞ –≥–æ–¥–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞.`, // html body
    });
  } catch (err) {
    console.log(err);
    throw new Error("–û—à–∏–±–∫–∞!");
  }
};

// verify email
export const sendVerifyEmail = async (receiverEmail: string, link: string) => {
  try {
    return await transporter.sendMail({
      from: `"JW Centrs help üöÄ" <${process.env.GMAIL_EMAIL}>`,
      to: receiverEmail,
      subject: "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —ç–ª. –ø–æ—á—Ç—ã",
      html: `–ù–∞–º–∏—Ç–µ –Ω–∞ —ç—Ç—É <a href="${link}">—Å—Å—ã–ª–∫—É</a> –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–∞—à–µ–π —ç–ª. –ø–æ—á—Ç—ã. <br/> –°—ã–ª–∫–∞ –≥–æ–¥–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞.`,
    });
  } catch (err) {
    console.log(err);
    throw new Error("–û—à–∏–±–∫–∞!");
  }
};
